<!--
 ************************************************************************
 * Copyright (c) Crater Dog Technologies(TM).  All Rights Reserved.     *
 ************************************************************************
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.        *
 *                                                                      *
 * This code is free software; you can redistribute it and/or modify it *
 * under the terms of The MIT License (MIT), as published by the Open   *
 * Source Initiative. (See http://opensource.org/licenses/MIT)          *
 ************************************************************************
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.craterdog.maven-parent-poms</groupId>
        <artifactId>root</artifactId>
        <version>3.10-SNAPSHOT</version>
        <relativePath>../root/pom.xml</relativePath>
    </parent>

    <organization>
        <name>Crater Dog Technologies(TM)</name>
        <url>http://craterdog.com</url>
    </organization>

    <name>Crater Dog Java API Module Parent POM</name>
    <description>The parent POM for all Java modules that simply define an API.</description>
    <url>https://github.com/craterdog/maven-parent-poms/wiki</url>

    <groupId>com.craterdog.maven-parent-poms</groupId>
    <artifactId>java-api</artifactId>
    <version>3.10-SNAPSHOT</version>
    <packaging>pom</packaging>

    <licenses>
        <license>
            <name>The MIT License</name>
            <url>http://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Derk Norton</name>
            <email>derk.norton@gmail.com</email>
            <organization>Crater Dog Technologies(TM)</organization>
            <organizationUrl>http://craterdog.com</organizationUrl>
        </developer>
    </developers>

    <properties>
        <spring-version>4.1.4.RELEASE</spring-version>
        <joda-version>2.2</joda-version>
        <oval-version>1.84</oval-version>
        <slf4j-version>1.7.10</slf4j-version>
        <maven-compiler-plugin-version>3.2</maven-compiler-plugin-version>
        <maven-source-plugin-version>2.4</maven-source-plugin-version>
        <maven-javadoc-plugin-version>2.10.1</maven-javadoc-plugin-version>
    </properties>

    <dependencies>

        <!-- Core utilities used by other modules. Define this if you use
            Spring Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring-version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Expression Language (depends on spring-core) Define this if
            you use Spring Expression APIs (org.springframework.expression.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Bean Factory and JavaBeans utilities (depends on spring-core)
            Define this if you use Spring Bean APIs (org.springframework.beans.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core,
            spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
            This is the central artifact for Spring's Dependency Injection Container and is generally
            always defined -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- Support Better Timestamps and Attribute Validation -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.oval</groupId>
            <artifactId>oval</artifactId>
            <version>${oval-version}</version>
        </dependency>

        <!-- Use the Simple Logging Facade for Java (SLF4J) and slf4j-simple instead of default commons-logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
            <version>${slf4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j-version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--
            This plugin sets all the Java compiler defaults for this maven project.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin-version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>          <!-- Do everything EXCEPT the following:                -->
                        <arg>-Xlint:-serial</arg>      <!-- do not require serialVersionUID attribute          -->
                        <arg>-Xlint:-processing</arg>  <!-- do not generate annotation warnings (not reliable) -->
                        <arg>-proc:none</arg>          <!-- turn off annotation processing during compilation  -->
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!--
        This profile should be used when releasing a maven project using the nexus
        staging plugin instead of the default deployment plugin.  This profile can
        be activated by including "-P nexus" on the commandline.
        -->
        <profile>
            <id>nexus</id>
            <build>
                <plugins>
                    <!--
                    This plugin causes a jar file containing the sources to be attached to the
                    list of artifacts to be deployed.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${maven-source-plugin-version}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--
                    This plugin causes a jar file containing the javadocs to be attached to the
                    list of artifacts to be deployed.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin-version}</version>
                        <configuration>
                            <!-- include links to Java Runtime classes -->
                            <detectJavaApiLink>true</detectJavaApiLink>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <scm>
        <connection>scm:git:git@github.com:craterdog/maven-parent-poms.git</connection>
        <developerConnection>scm:git:git@github.com:craterdog/maven-parent-poms.git</developerConnection>
        <url>git@github.com:craterdog/maven-parent-poms.git</url>
        <tag>HEAD</tag>
    </scm>

</project>
